x-environment:
  &common-env
  - EDA_DB_HOST=postgres
  - EDA_MQ_HOST=redis
  - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-aap_eda.settings.development}

services:
  api:
    image: "${EDA_IMAGE:-localhost/aap-eda}"
    build:
      context: ../../
      dockerfile: tools/docker/Dockerfile
    environment: *common-env
    command:
      - /bin/bash
      - -c
      - aap-eda-manage migrate && scripts/create_superuser.sh && aap-eda-manage runserver 0.0.0.0:8000
    ports:
      - '8000:8000'
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ 'CMD', 'curl', '-q', 'http://localhost:8000/_healthz' ]
      interval: 30s
      timeout: 5s
      retries: 10
    volumes:
      - '../../:/app/src:z'

  worker:
    deploy:
      replicas: 2
    image: 'localhost/aap-eda-worker'
    build:
      context: ../../
      dockerfile: tools/docker/worker/Dockerfile
    environment: *common-env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - '../../:/app/src:z'

  postgres:
    image: 'docker.io/library/postgres:13'
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: eda
    command: >
      postgres -c config_file=/etc/postgresql/postgresql.conf -c log_statement=${PG_LOG_STATEMENT:-none}
    ports:
      - '5432:5432'
    volumes:
      - "./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:z"
      - "./postgres/initdb.d:/docker-entrypoint-initdb.d:z"
      - "./postgres/conf.d:/etc/postgresql/conf.d:z"
      - 'postgres_data:/var/lib/postgresql/data'
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', 'postgres' ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  redis:
    image: 'docker.io/library/redis:7'
    ports:
      - '6379:6379'
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  postgres_data: {}
