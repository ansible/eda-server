apiVersion: apps/v1
kind: Deployment
metadata:
  name: eda-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eda
      comp: api
  strategy: {}
  template:
    metadata:
      labels:
        app: eda
        comp: api
    spec:
      containers:
        - args:
            - /bin/bash
            - -c
            - >-
              aap-eda-manage migrate
              && aap-eda-manage create_initial_data 
              && scripts/create_superuser.sh
              && aap-eda-manage runserver 0.0.0.0:8000
          env:
            - name: EDA_DATABASE_URL
              value: postgresql+asyncpg://postgres:secret@postgres/eda
            - name: EDA_DB_HOST
              value: eda-postgres
            - name: EDA_DB_PASSWORD
              value: secret
            - name: EDA_SECRET_KEY
              value: secret
            - name: EDA_MQ_HOST
              value: eda-redis
            - name: EDA_ALLOWED_HOSTS
              value: "['*']"
            - name: EDA_DEPLOYMENT_TYPE
              value: k8s
            - name: EDA_WEBSOCKET_SERVER_NAME
              valueFrom:
                configMapKeyRef:
                  name: eda-env-properties
                  key: EDA_WEBSOCKET_SERVER_NAME
            - name: EDA_WEBSOCKET_SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: eda-env-properties
                  key: EDA_WEBSOCKET_SERVER_PORT
            - name: EDA_CONTROLLER_URL
              valueFrom:
                configMapKeyRef:
                  name: eda-env-properties
                  key: EDA_CONTROLLER_URL
            - name: EDA_CONTROLLER_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: eda-env-properties
                  key: EDA_CONTROLLER_TOKEN
            - name: EDA_CONTROLLER_SSL_VERIFY
              valueFrom:
                configMapKeyRef:
                  name: eda-env-properties
                  key: EDA_CONTROLLER_SSL_VERIFY
          image: aap-eda
          imagePullPolicy: Never
          name: eda-api
          ports:
            - containerPort: 8000
          resources: {}
      restartPolicy: Always
      initContainers:
        - name: wait-for-postgres
          env:
            - name: EDA_DB_HOST
              value: eda-postgres
          image: docker.io/alpine:latest
          command: [ 'sh', '-c', "until nslookup ${EDA_DB_HOST}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for ${EDA_DB_HOST}; sleep 2; done" ]
status: {}
